{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/gautier/Documents/Prog/Udemy/react/crwn-clothing/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  min-width: 165px;\\n  width: auto;\\n  height: 50px;\\n  letter-spacing: 0.5px;\\n  line-height: 50px;\\n  padding: 0 35px 0 35px;\\n  font-size: 15px;\\n  background-color: black;\\n  color: white;\\n  text-transform: uppercase;\\n  font-family: 'Open Sans Condensed';\\n  font-weight: bolder;\\n  border: none;\\n  cursor: pointer;\\n  display: flex;\\n  justify-content: center;\\n\\n\\n\\t\", \"\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    background-color: #4285f4;\\n    color: white;\\n\\n    &:hover{\\n      background-color: #357ae8;\\n    }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n\\tbackground-color: white;\\n\\tcolor: black;\\n\\tborder: 1px solid black;\\n\\n\\t&:hover {\\n\\t  background-color: black;\\n\\t  color: white;\\n\\t  border: none;\\n\\t}\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\t\\n\\tbackground-color: black;\\n\\tcolor: white;\\n\\tborder: none;\\n\\t\\n\\t&:hover {\\n\\t\\tbackground-color: white;\\n\\t\\tcolor: black;\\n\\t\\tborder: 1px solid black;\\n\\t}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled, { css } from 'styled-components';\nconst buttonStyles = css(_templateObject());\nconst invertedButtonStyles = css(_templateObject2());\nconst googleSignInStyles = css(_templateObject3());\n\nconst getButtonStyles = props => {\n  if (props.isGoogleSignIn) {\n    return googleSignInStyles;\n  }\n\n  return props.inverted ? invertedButtonStyles : buttonStyles;\n};\n\nexport const CustomButtonContainer = styled.button(_templateObject4(), getButtonStyles);","map":{"version":3,"sources":["/home/gautier/Documents/Prog/Udemy/react/crwn-clothing/src/components/custom-button/custom-button.styles.jsx"],"names":["styled","css","buttonStyles","invertedButtonStyles","googleSignInStyles","getButtonStyles","props","isGoogleSignIn","inverted","CustomButtonContainer","button"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,MAAMC,YAAY,GAAGD,GAAH,mBAAlB;AAYA,MAAME,oBAAoB,GAAGF,GAAH,oBAA1B;AAYA,MAAMG,kBAAkB,GAAGH,GAAH,oBAAxB;;AASA,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAChC,MAAIA,KAAK,CAACC,cAAV,EAA0B;AACzB,WAAOH,kBAAP;AACA;;AAED,SAAOE,KAAK,CAACE,QAAN,GAAiBL,oBAAjB,GAAwCD,YAA/C;AACA,CAND;;AAQA,OAAO,MAAMO,qBAAqB,GAAGT,MAAM,CAACU,MAAV,qBAmB/BL,eAnB+B,CAA3B","sourcesContent":["import styled, { css } from 'styled-components';\n\nconst buttonStyles = css`\t\n\tbackground-color: black;\n\tcolor: white;\n\tborder: none;\n\t\n\t&:hover {\n\t\tbackground-color: white;\n\t\tcolor: black;\n\t\tborder: 1px solid black;\n\t}\n`;\n\nconst invertedButtonStyles = css`\n\tbackground-color: white;\n\tcolor: black;\n\tborder: 1px solid black;\n\n\t&:hover {\n\t  background-color: black;\n\t  color: white;\n\t  border: none;\n\t}\n`;\n\nconst googleSignInStyles = css`\n    background-color: #4285f4;\n    color: white;\n\n    &:hover{\n      background-color: #357ae8;\n    }\n`;\n\nconst getButtonStyles = props => {\n\tif (props.isGoogleSignIn) {\n\t\treturn googleSignInStyles;\n\t}\n\n\treturn props.inverted ? invertedButtonStyles : buttonStyles;\n}\n\nexport const CustomButtonContainer = styled.button`\n  min-width: 165px;\n  width: auto;\n  height: 50px;\n  letter-spacing: 0.5px;\n  line-height: 50px;\n  padding: 0 35px 0 35px;\n  font-size: 15px;\n  background-color: black;\n  color: white;\n  text-transform: uppercase;\n  font-family: 'Open Sans Condensed';\n  font-weight: bolder;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n\n\n\t${getButtonStyles}\n`;\n"]},"metadata":{},"sourceType":"module"}