{"ast":null,"code":"import _defineProperty from \"/home/gautier/Documents/Prog/Udemy/react/crwn-clothing/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/gautier/Documents/Prog/Udemy/react/crwn-clothing/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gautier/Documents/Prog/Udemy/react/crwn-clothing/client/src/components/sign-up/sign-up.components.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component.jsx';\nimport CustomButton from '../custom-button/custom-button.component.jsx';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\nconst DEFAULT_STATE = {\n  displayName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState(DEFAULT_STATE),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('passwords don\\'t match');\n      return;\n    }\n\n    signUpStart({\n      email,\n      password,\n      displayName\n    });\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"I don't have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"confirmPassword\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Sign Up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/gautier/Documents/Prog/Udemy/react/crwn-clothing/client/src/components/sign-up/sign-up.components.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","DEFAULT_STATE","displayName","email","password","confirmPassword","SignUp","userCredentials","setCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component.jsx';\nimport CustomButton from '../custom-button/custom-button.component.jsx';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nimport './sign-up.styles.scss';\n\nconst DEFAULT_STATE = {\n\tdisplayName: '',\n\temail : '',\n\tpassword: '',\n\tconfirmPassword: '',\n}\n\nconst SignUp = ({ signUpStart }) => {\n\n\tconst [ userCredentials, setCredentials ] = useState(DEFAULT_STATE);\n\n\tconst { displayName, email, password, confirmPassword } = userCredentials;\n\n\tconst handleSubmit = async event => {\n\t\t\n\t\tevent.preventDefault();\n\t\tif (password !== confirmPassword){\n\t\t\talert('passwords don\\'t match');\n\t\t\treturn;\n\t\t} \n\n\t\tsignUpStart({ email, password, displayName });\n\n\t}\n\n\tconst handleChange = event => {\n\n\t\tconst { name, value } = event.target;\n\t\tsetCredentials({ ...userCredentials, [name]: value});\n\t\t\n\t}\n\n\treturn(\n\t\t<div className = 'sign-up'>\n\t\t\t<h2 className = 'title'>I don't have an account</h2>\n\t\t\t<span>Sign up with your email and password</span>\n\t\t\t<form className = 'sign-up-form' onSubmit = {handleSubmit}>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype = 'text'\n\t\t\t\t\tname = 'displayName'\n\t\t\t\t\tvalue = {displayName}\n\t\t\t\t\tonChange = {handleChange}\n\t\t\t\t\tlabel = 'Display Name'\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype = 'email'\n\t\t\t\t\tname = 'email'\n\t\t\t\t\tvalue = {email}\n\t\t\t\t\tonChange = {handleChange}\n\t\t\t\t\tlabel = 'Email'\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype = 'password'\n\t\t\t\t\tname = 'password'\n\t\t\t\t\tvalue = {password}\n\t\t\t\t\tonChange = {handleChange}\n\t\t\t\t\tlabel = 'Password'\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype = 'password'\n\t\t\t\t\tname = 'confirmPassword'\n\t\t\t\t\tvalue = {confirmPassword}\n\t\t\t\t\tonChange = {handleChange}\n\t\t\t\t\tlabel = 'confirmPassword'\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<CustomButton type= 'submit'>Sign Up</CustomButton>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tsignUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}