{"ast":null,"code":"import _defineProperty from \"/home/gautier/Documents/Prog/Udemy/react/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity + 1\n    }) : cartItem);\n  } else {\n    return [...cartItems, _objectSpread({}, cartItemToAdd, {\n      quantity: 1\n    })];\n  }\n};","map":{"version":3,"sources":["/home/gautier/Documents/Prog/Udemy/react/crwn-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AAE1D,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACxBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADlB,CAAzB;;AAIA,MAAIH,gBAAJ,EAAsB;AACrB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IAC3BA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA/B,qBACOD,QADP;AACiBG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAD/C,SAEGH,QAHG,CAAP;AAKA,GAND,MAQK;AACJ,WAAO,CAAC,GAAGJ,SAAJ,oBAAmBC,aAAnB;AAAkCM,MAAAA,QAAQ,EAAE;AAA5C,OAAP;AACA;AAED,CAlBM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\n\n\tconst existingCartItem = cartItems.find( \n\t\tcartItem => cartItem.id === cartItemToAdd.id\n\t)\n\n\tif (existingCartItem) {\n\t\treturn cartItems.map(cartItem => \n\t\t\t(cartItem.id === cartItemToAdd.id) \n\t\t\t\t? {...cartItem, quantity: cartItem.quantity + 1}\n\t\t\t\t: cartItem\n\t\t)\n\t}\n\t\n\telse {\n\t\treturn [...cartItems, {...cartItemToAdd, quantity: 1}]\n\t}\n\n};"]},"metadata":{},"sourceType":"module"}