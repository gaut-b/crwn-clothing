{"ast":null,"code":"var _jsxFileName = \"/home/gautier/Documents/Prog/Udemy/react/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions.js';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils.js';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component.jsx';\nimport CollectionPage from '../collection/collection.component.jsx';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component.jsx';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.unsubscribeFromSnapshot = null;\n    this.state = {\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const isLoading = this.state.isLoading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/gautier/Documents/Prog/Udemy/react/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","updateCollections","firestore","convertCollectionsSnapshotToMap","CollectionsOverview","CollectionPage","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","constructor","props","unsubscribeFromSnapshot","state","isLoading","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,kCAA3D;AAEA,OAAOC,mBAAP,MAAgC,0EAAhC;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,WAAP,MAAwB,0DAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMI,yBAAyB,GAAGF,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMI,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AADiB,SAOlBC,uBAPkB,GAOQ,IAPR;AAEjB,SAAKC,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAE;AADC,KAAb;AAGA;;AAIDC,EAAAA,iBAAiB,GAAG;AAAA,UAEXf,iBAFW,GAEW,KAAKW,KAFhB,CAEXX,iBAFW;AAInB,UAAMgB,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAA0B,MAAMC,QAAN,IAAkB;AAC3C,YAAMC,cAAc,GAAGlB,+BAA+B,CAACiB,QAAD,CAAtD;AACAnB,MAAAA,iBAAiB,CAACoB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,KAJD;AAMA;;AAEDQ,EAAAA,MAAM,GAAE;AAAA,UAECC,KAFD,GAEW,KAAKZ,KAFhB,CAECY,KAFD;AAAA,UAGCT,SAHD,GAGe,KAAKD,KAHpB,CAGCC,SAHD;AAKP,WACC;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,YAAKS,KAAK,CAACC,IAAX,CAFL;AAGC,MAAA,MAAM,EAAMb,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAIG;AAAxC,SAAuDH,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAMC,oBAAC,KAAD;AACC,MAAA,IAAI,YAAKY,KAAK,CAACC,IAAX,mBADL;AAEC,MAAA,MAAM,EAAMb,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAKG;AAAzC,SAAyDH,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,CADD;AAaA;;AA3CqC;;AA6CtC;;AAED,MAAMc,kBAAkB,GAAIC,QAAD,KAAe;AACzC1B,EAAAA,iBAAiB,EAAEoB,cAAc,IAAIM,QAAQ,CAAC1B,iBAAiB,CAACoB,cAAD,CAAlB;AADJ,CAAf,CAA3B;;AAIA,eAAerB,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions.js';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils.js';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component.jsx';\nimport CollectionPage from '../collection/collection.component.jsx';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component.jsx';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoading: true\n\t\t};\n\t};\n\n\tunsubscribeFromSnapshot = null;\n\n\tcomponentDidMount() {\n\n\t\tconst { updateCollections } = this.props;\n\n\t\tconst collectionRef = firestore.collection('collections');\n\t\t\n\t\tcollectionRef.onSnapshot( async snapshot => {\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\t\t\tupdateCollections(collectionsMap);\n\t\t\tthis.setState({ isLoading: false })\n\t\t})\n\n\t};\n\n\trender(){\n\n\t\tconst { match } = this.props;\n\t\tconst { isLoading } = this.state;\n\n\t\treturn(\n\t\t\t<div className = 'shop-page'>\n\t\t\t\t<Route \n\t\t\t\t\texact \n\t\t\t\t\tpath={`${match.path}`} \n\t\t\t\t\trender = { (props) => <CollectionPageWithSpinner isLoading = {isLoading} {...props} /> } \n\t\t\t\t/>\n\t\t\t\t<Route \n\t\t\t\t\tpath={`${match.path}/:collectionId`} \n\t\t\t\t\trender = { (props) => <CollectionPageWithSpinner isLoading = { isLoading } {...props} /> } \n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n\tupdateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}