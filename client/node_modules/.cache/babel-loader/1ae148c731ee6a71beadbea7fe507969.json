{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils.js';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n;","map":{"version":3,"sources":["/home/gautier/Documents/Prog/Udemy/react/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,kCAA3D;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AAExC,MAAI;AAEH,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAACI,+BAAD,EAAkCM,QAAlC,CAAjC;AACA,UAAMT,GAAG,CAACI,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AAEA,GAPD,CAOE,OAAOC,KAAP,EAAc;AAEf,UAAMZ,GAAG,CAACK,uBAAuB,CAACO,KAAD,CAAxB,CAAT;AAEA;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMf,UAAU,CACfG,eAAe,CAACa,uBADD,EAEfR,qBAFe,CAAhB;AAIA;AAAA","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils.js';\n\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions'\n\nexport function* fetchCollectionsAsync() {\n\t\n\ttry {\n\n\t\tconst collectionRef = firestore.collection('collections');\n\t\tconst snapshot = yield collectionRef.get();\n\t\tconst collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n\t\tyield put(fetchCollectionsSuccess(collectionsMap));\n\n\t} catch (error) {\n\n\t\tyield put(fetchCollectionsFailure(error));\n\t\t\n\t}\n}\n\nexport function* fetchCollectionsStart() {\n\tyield takeLatest(\n\t\tShopActionTypes.FETCH_COLLECTIONS_START,\n\t\tfetchCollectionsAsync\n\t);\n};"]},"metadata":{},"sourceType":"module"}