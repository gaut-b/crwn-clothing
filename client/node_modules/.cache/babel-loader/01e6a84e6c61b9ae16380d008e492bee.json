{"ast":null,"code":"import _defineProperty from \"/home/gautier/Documents/Prog/Udemy/react/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport UserActionTypes from './user.types';\nimport { SignInSuccess, SignInFailure } from './user.actions';\nexport function* getSnapshopFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n;\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshopFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshopFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession)]);\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshopFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.checkUserSession, isUserAuthenticated);\n}\n;","map":{"version":3,"sources":["/home/gautier/Documents/Prog/Udemy/react/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","getCurrentUser","UserActionTypes","SignInSuccess","SignInFailure","getSnapshopFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas","onCheckUserSession","isUserAuthenticated","checkUserSession"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,EAA0DC,cAA1D,QAAgF,+BAAhF;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AAElD,MAAI;AACH,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACG,yBAAD,EAA4BM,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACQ,aAAa;AAAGO,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAAd,CAAT;AAEA,GALD,CAKE,OAAMC,KAAN,EAAa;AACd,UAAMjB,GAAG,CAACS,aAAa,CAACQ,KAAD,CAAd,CAAT;AACA;AAED;AAAA;AAED,OAAO,UAAUC,gBAAV,GAA6B;AACnC,MAAI;AAAA,iBAEc,MAAMf,IAAI,CAACgB,eAAL,CAAqBf,cAArB,CAFpB;AAAA,UAEKgB,IAFL,QAEKA,IAFL;;AAGH,UAAMV,uBAAuB,CAACU,IAAD,CAA7B;AAEA,GALD,CAKE,OAAMH,KAAN,EAAa;AACd,UAAMjB,GAAG,CAACS,aAAa,CAACQ,KAAD,CAAd,CAAT;AACA;AAED;AAAA;AAED,OAAO,UAAUI,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAV,CAA1B,EAA0D;AAChE,MAAI;AAAA,kBAEc,MAAMrB,IAAI,CAACsB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAFpB;AAAA,UAEKJ,IAFL,SAEKA,IAFL;;AAGH,UAAMV,uBAAuB,CAACU,IAAD,CAA7B;AAEA,GALD,CAKE,OAAMH,KAAN,EAAa;AACd,UAAMjB,GAAG,CAACS,aAAa,CAACQ,KAAD,CAAd,CAAT;AACA;AACD;AAAA;AAED,OAAO,UAAUS,mBAAV,GAAgC;AACtC,QAAM3B,UAAU,CAACQ,eAAe,CAACoB,oBAAjB,EAAuCT,gBAAvC,CAAhB;AACA;AAAA;AAED,OAAO,UAAUU,kBAAV,GAA+B;AACrC,QAAM7B,UAAU,CAACQ,eAAe,CAACsB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACA;AAAA;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC5B,QAAM7B,GAAG,CAAC,CACTC,IAAI,CAACwB,mBAAD,CADK,EAETxB,IAAI,CAAC0B,kBAAD,CAFK,EAGT1B,IAAI,CAAC6B,kBAAD,CAHK,CAAD,CAAT;AAKA;AAAA;AAGD,OAAO,UAAUC,mBAAV,GAAgC;AACtC,MAAI;AAEH,UAAMrB,QAAQ,GAAGL,cAAc,EAA/B;AACA,QAAI,CAACK,QAAL,EAAe;AACf,UAAMD,uBAAuB,CAACC,QAAD,CAA7B;AAEA,GAND,CAME,OAAMM,KAAN,EAAa;AACd,UAAMjB,GAAG,CAACS,aAAa,CAACQ,KAAD,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUc,kBAAV,GAA+B;AACrC,QAAMhC,UAAU,CAACQ,eAAe,CAAC0B,gBAAjB,EAAmCD,mBAAnC,CAAhB;AACA;AAAA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport UserActionTypes from './user.types';\nimport { SignInSuccess, SignInFailure } from './user.actions';\n\nexport function* getSnapshopFromUserAuth(userAuth) {\n\t\n\ttry {\n\t\tconst userRef = yield call(createUserProfileDocument, userAuth);\n\t\tconst userSnapshot = yield userRef.get();\n\t\tyield put(SignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n\n\t} catch(error) {\n\t\tyield put(SignInFailure(error));\n\t}\n\n};\n\nexport function* signInWithGoogle() {\n\ttry {\n\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\n\t\tyield getSnapshopFromUserAuth(user);\n\n\t} catch(error) {\n\t\tyield put(SignInFailure(error));\n\t}\n\t\n};\n\nexport function* signInWithEmail({payload: { email, password }}) {\n\ttry {\n\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\n\t\tyield getSnapshopFromUserAuth(user);\n\n\t} catch(error) {\n\t\tyield put(SignInFailure(error));\n\t}\n};\n\nexport function* onGoogleSignInStart() {\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n};\n\nexport function *onEmailSignInStart() {\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n};\n\nexport function* userSagas() {\n\tyield all([\n\t\tcall(onGoogleSignInStart),\n\t\tcall(onEmailSignInStart),\n\t\tcall(onCheckUserSession)\n\t]);\n};\n\n\nexport function* isUserAuthenticated() {\n\ttry {\n\n\t\tconst userAuth = getCurrentUser();\n\t\tif (!userAuth) return;\n\t\tyield getSnapshopFromUserAuth(userAuth);\n\n\t} catch(error) {\n\t\tyield put(SignInFailure(error))\n\t}\n}\n\nexport function* onCheckUserSession() {\n\tyield takeLatest(UserActionTypes.checkUserSession, isUserAuthenticated)\n};"]},"metadata":{},"sourceType":"module"}