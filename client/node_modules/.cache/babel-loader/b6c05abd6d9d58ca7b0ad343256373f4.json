{"ast":null,"code":"import _defineProperty from \"/home/gautier/Documents/Prog/Udemy/react/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/gautier/Documents/Prog/Udemy/react/crwn-clothing/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gautier/Documents/Prog/Udemy/react/crwn-clothing/src/components/sign-in/sign-in.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component.jsx';\nimport CustomButton from '../custom-button/custom-button.component.jsx';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \" I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    label: \"password\",\n    value: password,\n    handleChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/gautier/Documents/Prog/Udemy/react/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","email","password","userCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component.jsx';\nimport CustomButton from '../custom-button/custom-button.component.jsx';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => { \n\n\tconst [userCredentials, setCredentials ] = useState({ email: '', password: '' });\n\t\n\tconst { email, password } = userCredentials;\n\n\tconst handleSubmit = async (event) => {\n\t\t\n\t\tevent.preventDefault();\n\t\temailSignInStart(email, password);\n\n\t}\n\n\tconst handleChange = (event) => {\n\n\t\tconst { value, name } = event.target;\n\n\t\tsetCredentials({...userCredentials, [name]: value })\n\t\t\n\t}\n\n\treturn(\n\n\t\t<div className = 'sign-in'>\n\t\t\t<h2> I already have an account</h2>\n\t\t\t<span>Sign in with your email and password</span>\n\n\t\t\t<form onSubmit = { handleSubmit } >\n\t\t\t\t<FormInput \n\t\t\t\t  name = 'email' \n\t\t\t\t  type = 'email'\n\t\t\t\t  value = { email }\n\t\t\t\t  handleChange = { handleChange }\n\t\t\t\t  label = 'email'\n\t\t\t\t  required \n\t\t\t\t/>\n\t\t\t\t<FormInput \n\t\t\t\t  name = 'password'\n\t\t\t\t  type = 'password'\n\t\t\t\t  label = 'password'\n\t\t\t\t  value = { password } \n\t\t\t\t  handleChange = { handleChange } \n\t\t\t\t  required \n\t\t\t\t/>\n\t\t\t\t<div className = 'buttons'>\n\t\t\t\t\t<CustomButton type = 'submit'>Sign In</CustomButton>\n\t\t\t\t\t<CustomButton \n\t\t\t\t\t\ttype = 'button' \n\t\t\t\t\t\tonClick = { googleSignInStart } \n\t\t\t\t\t\tisGoogleSignIn\n\t\t\t\t\t>\n\t\t\t\t\t\tSign in with Google\n\t\t\t\t\t</CustomButton>\n\t\t\t\t</div>\n\t\t\t</form>\n\n\t\t</div>\n\n\t);\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\n\temailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}