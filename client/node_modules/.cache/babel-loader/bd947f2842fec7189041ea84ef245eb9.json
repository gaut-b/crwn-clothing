{"ast":null,"code":"import _defineProperty from \"/home/gautier/Documents/Prog/Udemy/react/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CartActionTypes } from './cart.types.js';\nconst INITIAL_STATE = {\n  hidden: true\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/gautier/Documents/Prog/Udemy/react/crwn-clothing/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","INITIAL_STATE","hidden","cartReducer","state","action","type","TOGGLE_CART_HIDDEN"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,iBAAhC;AAEA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,MAAM,EAAE;AADa,CAAtB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AACtD,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKN,eAAe,CAACO,kBAArB;AACC,+BACIH,KADJ;AAECF,QAAAA,MAAM,EAAE,CAACE,KAAK,CAACF;AAFhB;;AAKD;AACC,aAAOE,KAAP;AARF;AAUA,CAXD;;AAaA,eAAeD,WAAf","sourcesContent":["import { CartActionTypes } from './cart.types.js';\n\nconst INITIAL_STATE = {\n\thidden: true\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n\tswitch(action.type){\n\t\tcase CartActionTypes.TOGGLE_CART_HIDDEN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thidden: !state.hidden\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}